-- Fix the formatting of the dates
--update CovidDeaths
--set date = '20' ||substr(date, -2) || '-' || 
--           substr('00' || (date + 0), -2, 2) || '-' ||
--           substr('00' || (substr(date, instr(date, '/') + 1) + 0), -2, 2);
           
--update CovidVaccinations
--set date = '20' ||substr(date, -2) || '-' || 
--           substr('00' || (date + 0), -2, 2) || '-' ||
--           substr('00' || (substr(date, instr(date, '/') + 1) + 0), -2, 2);


SELECT *
FROM PortfolioProject.CovidDeaths
WHERE continent IS NOT NULL
ORDER BY 3, 4
;

--SELECT *
--FROM PortfolioProject.CovidVaccinations
--ORDER BY 3, 4

-- Select the data that we are going to be using



SELECT location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject.CovidDeaths
ORDER BY 1, 2
;

--Looking at Total Cases vs Total Deaths
--Shows Likelihood of dying if you contract covid in selected country

SELECT location, date, total_cases, total_deaths, PRINTF("%.2f",total_deaths)/PRINTF("%.2f",total_cases)*100 AS DeathPercentage
FROM PortfolioProject.CovidDeaths
WHERE location like '%states%' AND continent IS NOT NULL
ORDER BY 1, 2
;


--Looking at the total cases vs population
--Shows what % of the population got COVID
SELECT location, date, population, total_cases, PRINTF("%.2f",total_cases)/PRINTF("%.2f",population)*100 AS PercentageInfected
FROM PortfolioProject.CovidDeaths
WHERE continent IS NOT NULL
--WHERE location like '%states%'
ORDER BY 1, 2
;
--Looking at Countries with Highest inection rate compared to population

SELECT location,population , MAX(total_cases) AS HighestInfectionCount, MAX(PRINTF("%.2f",total_cases)/PRINTF("%.2f",population)*100) AS PercentPopulationInfected
FROM PortfolioProject.CovidDeaths
--WHERE location like '%Arg%'
WHERE continent IS NOT NULL
GROUP BY location, population
ORDER BY PercentPopulationInfected DESC
;

--Showing Countries with Highest Death Count per Population
SELECT location, MAX(CAST(total_deaths AS INT)) AS TotalDeathCount
FROM PortfolioProject.CovidDeaths
--WHERE location like '%Arg%'
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY TotalDeathCount DESC
;
-- Break down by continent


--Shows the continents with the highest death count per population


SELECT continent, MAX(CAST(total_deaths AS INT)) AS TotalDeathCount
FROM PortfolioProject.CovidDeaths
--WHERE location like '%Canada%'
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC
;

--Global numbers


SELECT date, SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(PRINTF("%.2f",new_deaths))/SUM(PRINTF("%.2f",new_cases))*100 AS death_percentage
FROM PortfolioProject.CovidDeaths
-- WHERE location like '%states%' 
WHERE continent IS NOT NULL
GROUP BY date
ORDER BY 1, 2
;

SELECT date, SUM(new_cases) AS total_cases, SUM(new_deaths) AS total_deaths, SUM(PRINTF("%.2f",new_deaths))/SUM(PRINTF("%.2f",new_cases))*100 AS death_percentage
FROM PortfolioProject.CovidDeaths
-- WHERE location like '%states%' 
WHERE continent IS NOT NULL
--GROUP BY date
ORDER BY 1, 2
;

--Total Population vs Vaccinations


SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
 SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date)
 AS RollingVaccinationCount
 , RollingVaccinationCount 
FROM PortfolioProject.CovidDeaths dea
JOIN PortfolioProject.CovidVaccinations vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
ORDER BY 2, 3
;

-- USE CTE 

WITH PopvsVac (Continent, Location, Date, Population, New_Vaccinations , RollingVaccinationCount)
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
 SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date)
 AS RollingVaccinationCount
 , RollingVaccinationCount 
FROM PortfolioProject.CovidDeaths dea
JOIN PortfolioProject.CovidVaccinations vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent IS NOT NULL
--ORDER BY 2, 3
)
SELECT *, (RollingVaccinationCount/Population) * 100
FROM PopvsVac
;



--TEMP TABLE

DROP TABLE IF EXISTS #PercentPopulationVaccinated;
CREATE TABLE #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric, 
RollingVaccinationCount numeric
)
;

INSERT INTO #PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
 SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date)
 AS RollingVaccinationCount
 , RollingVaccinationCount 
FROM PortfolioProject.CovidDeaths dea
JOIN PortfolioProject.CovidVaccinations vac
    ON dea.location = vac.location
    AND dea.date = vac.date
WHERE dea.continent IS NOT NULL;
--ORDER BY 2, 3

SELECT *, (RollingVaccinationCount/Population) * 100
FROM #PercentPopulationVaccinated
;

 --Create view to store data for later visualizations
 
CREATE VIEW ContinentsWithHighestDeaths
AS
SELECT continent, MAX(CAST(total_deaths AS INT)) AS TotalDeathCount
FROM PortfolioProject.CovidDeaths
--WHERE location like '%Canada%'
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC
;
